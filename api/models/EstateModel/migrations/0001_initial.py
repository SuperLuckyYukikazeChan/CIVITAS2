# Generated by Django 3.2.5 on 2021-11-02 23:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('MaterialModel', '0001_initial'),
        ('DepositoryModel', '0001_initial'),
        ('CityModel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ABC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.CharField(default='sb', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Estate_To_Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.FloatField(verbose_name='数量')),
            ],
            options={
                'verbose_name': '不动产需求物资',
                'verbose_name_plural': '不动产需求物资',
            },
        ),
        migrations.CreateModel(
            name='ABCD',
            fields=[
                ('abc_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='EstateModel.abc')),
                ('b', models.CharField(default='sbnt', max_length=20)),
            ],
            bases=('EstateModel.abc',),
        ),
        migrations.CreateModel(
            name='Estate_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='不动产类型名')),
                ('max_lands', models.FloatField(verbose_name='占地面积')),
                ('need_building_capacity', models.FloatField(verbose_name='建设所需产能')),
                ('is_raw_materials', models.BooleanField(verbose_name='是否为原材料建筑')),
                ('is_machining', models.BooleanField(verbose_name='是否为加工建筑')),
                ('number_of_work_person', models.IntegerField(blank=True, null=True, verbose_name='单位面积工作人数')),
                ('is_house', models.BooleanField(verbose_name='是否为住宅')),
                ('number_of_house_person', models.IntegerField(blank=True, null=True, verbose_name='单位面积可居住人数')),
                ('is_restaurant', models.BooleanField(verbose_name='是否为餐厅')),
                ('is_irrigation', models.BooleanField(verbose_name='是否使用灌溉值机制')),
                ('is_fertility', models.BooleanField(verbose_name='是否使用肥力值机制')),
                ('allowable_terrain', models.ManyToManyField(related_name='allow_terrain', to='CityModel.Terrain', verbose_name='允许建设的地形')),
                ('best_terrain', models.ManyToManyField(blank=True, related_name='best_terrain', to='CityModel.Terrain', verbose_name='最适地形')),
                ('list_of_machining', models.ManyToManyField(blank=True, related_name='list_machining', to='MaterialModel.Recipe', verbose_name='可产加工品')),
                ('list_of_raw_materials', models.ManyToManyField(blank=True, related_name='list_raw_materials', to='MaterialModel.Material_Detail', verbose_name='可产原料表')),
                ('need_material', models.ManyToManyField(through='EstateModel.Estate_To_Material', to='MaterialModel.Material_Detail', verbose_name='建设需要材料')),
            ],
            options={
                'verbose_name': '不动产类型',
                'verbose_name_plural': '不动产类型',
            },
        ),
        migrations.AddField(
            model_name='estate_to_material',
            name='estate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EstateModel.estate_type', verbose_name='不动产'),
        ),
        migrations.AddField(
            model_name='estate_to_material',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estate_material', to='MaterialModel.material_detail', verbose_name='物资'),
        ),
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='不动产名')),
                ('status_estate', models.CharField(choices=[('开垦中', '开垦中'), ('建设中', '建设中'), ('完成', '完成')], default='开垦中', max_length=20, verbose_name='状态')),
                ('building_capacity', models.FloatField(default=0, verbose_name='建筑积累产能，只有在建筑阶段使用')),
                ('now_lands', models.FloatField(default=0, verbose_name='当前占地')),
                ('is_county', models.BooleanField(default=False, editable=False, verbose_name='是否位于县城')),
                ('is_suburb', models.BooleanField(default=False, editable=False, verbose_name='是否位于郊区')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='建立于')),
                ('irrigation', models.FloatField(blank=True, null=True, verbose_name='灌溉值')),
                ('fertility', models.FloatField(blank=True, null=True, verbose_name='肥力值')),
                ('depository_from_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depository_from_material', to='DepositoryModel.depository', verbose_name='来料仓库')),
                ('depository_self', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depository_self', to='DepositoryModel.depository', verbose_name='自身仓库')),
                ('depository_to_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depository_to_material', to='DepositoryModel.depository', verbose_name='出料仓库')),
                ('location_county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CityModel.county', verbose_name='位于县')),
                ('location_suburb', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CityModel.suburb', verbose_name='位于郊区')),
                ('location_terrain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CityModel.terrain', verbose_name='位于某地形')),
            ],
            options={
                'verbose_name': '不动产',
                'verbose_name_plural': '不动产',
            },
        ),
    ]
