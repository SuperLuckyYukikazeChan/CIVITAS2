# Generated by Django 3.2.5 on 2021-10-21 15:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('MaterialModel', '0017_auto_20210813_2354'),
        ('CivitasModel', '0003_auto_20211021_1535'),
        ('CityModel', '0004_auto_20211015_0043'),
    ]

    operations = [
        migrations.CreateModel(
            name='County_To_Terrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.FloatField(verbose_name='None已开垦土地数量')),
                ('open_lands_max', models.FloatField(verbose_name='None土地总量')),
            ],
            options={
                'verbose_name': '县-地形中间表',
                'verbose_name_plural': '县-地形中间表',
            },
        ),
        migrations.CreateModel(
            name='Open_Difficulty_Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('double_parameter', models.IntegerField(default=200, verbose_name='基准难度翻倍参数')),
            ],
            options={
                'verbose_name': '开垦难度参数',
                'verbose_name_plural': '开垦难度参数',
            },
        ),
        migrations.CreateModel(
            name='Suburb_To_Terrain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.FloatField(verbose_name='None已开垦土地数量')),
                ('land_parameter', models.IntegerField(default=-1, verbose_name='None土地参数，如为-1则代表该郊区没有该类型土地，参数均除以100后使用（方便两位小数），        100参数代表每开垦1个基准难度翻倍参数时开垦难度翻倍，200参数代表每开垦1/2个基准难度翻倍参数时开垦难度翻倍（翻倍更快，开垦更难），下同')),
            ],
            options={
                'verbose_name': '郊区-地形中间表',
                'verbose_name_plural': '郊区-地形中间表',
            },
        ),
        migrations.RemoveField(
            model_name='county',
            name='default_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='freshwater_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='freshwater_open_lands',
        ),
        migrations.RemoveField(
            model_name='county',
            name='freshwater_open_lands_max',
        ),
        migrations.RemoveField(
            model_name='county',
            name='hill_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='hill_open_lands',
        ),
        migrations.RemoveField(
            model_name='county',
            name='hill_open_lands_max',
        ),
        migrations.RemoveField(
            model_name='county',
            name='mountain_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='mountain_open_lands',
        ),
        migrations.RemoveField(
            model_name='county',
            name='mountain_open_lands_max',
        ),
        migrations.RemoveField(
            model_name='county',
            name='plain_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='plain_open_lands',
        ),
        migrations.RemoveField(
            model_name='county',
            name='plain_open_lands_max',
        ),
        migrations.RemoveField(
            model_name='county',
            name='saltwater_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='county',
            name='saltwater_open_lands',
        ),
        migrations.RemoveField(
            model_name='county',
            name='saltwater_open_lands_max',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='default_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='freshwater_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='freshwater_open_lands',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='freshwater_parameter',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='hill_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='hill_open_lands',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='hill_parameter',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='mountain_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='mountain_open_lands',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='mountain_parameter',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='plain_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='plain_open_lands',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='plain_parameter',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='saltwater_open_difficulty',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='saltwater_open_lands',
        ),
        migrations.RemoveField(
            model_name='suburb',
            name='saltwater_parameter',
        ),
        migrations.AlterField(
            model_name='city',
            name='flooding_season',
            field=models.CharField(choices=[('1', '春'), ('2', '夏'), ('3', '秋'), ('4', '冬')], default='1', max_length=20, verbose_name='泛滥季节'),
        ),
        migrations.AlterField(
            model_name='county',
            name='list_of_special_materials_county',
            field=models.ManyToManyField(blank=True, related_name='special_materials_county', to='MaterialModel.MaterialDetail', verbose_name='特产表'),
        ),
        migrations.DeleteModel(
            name='Default_Open_Difficulty',
        ),
        migrations.AddField(
            model_name='suburb_to_terrain',
            name='county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CityModel.suburb', verbose_name='关联郊区'),
        ),
        migrations.AddField(
            model_name='suburb_to_terrain',
            name='terrain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CivitasModel.terrain', verbose_name='地形'),
        ),
        migrations.AddField(
            model_name='county_to_terrain',
            name='county',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CityModel.county', verbose_name='关联县'),
        ),
        migrations.AddField(
            model_name='county_to_terrain',
            name='terrain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CivitasModel.terrain', verbose_name='地形'),
        ),
        migrations.AddField(
            model_name='county',
            name='open_difficulty_parameter',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='CityModel.open_difficulty_parameter', verbose_name='开垦难度参数'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='county',
            name='terrain_parameter',
            field=models.ManyToManyField(through='CityModel.County_To_Terrain', to='CivitasModel.Terrain', verbose_name='地形表'),
        ),
        migrations.AddField(
            model_name='suburb',
            name='open_difficulty_parameter',
            field=models.ForeignKey(default=10, on_delete=django.db.models.deletion.CASCADE, to='CityModel.open_difficulty_parameter', verbose_name='开垦难度参数'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='suburb',
            name='terrain_parameter',
            field=models.ManyToManyField(through='CityModel.Suburb_To_Terrain', to='CivitasModel.Terrain', verbose_name='地形表'),
        ),
    ]
